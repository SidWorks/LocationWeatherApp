{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\searc\\\\Desktop\\\\stephen\\\\stephen\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Spiner from \"./spinner\";\nimport SeasonDisplay from \"./seasondisplay\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      long: null,\n      errMsg: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    }), err => this.setState({\n      errMsg: err.message\n    }));\n  }\n\n  renderElement() {\n    if (this.state.errMsg && !this.state.lat) return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }\n    }, \"Error : \", this.state.errMsg);\n    if (!this.state.errMsg && this.state.lat) return /*#__PURE__*/React.createElement(SeasonDisplay, {\n      lat: this.state.lat,\n      long: this.state.long,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    });\n    return /*#__PURE__*/React.createElement(Spiner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, this.renderElement());\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Users/searc/Desktop/stephen/stephen/src/index.js"],"names":["React","ReactDOM","Spiner","SeasonDisplay","App","Component","state","lat","long","errMsg","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","renderElement","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,IAAI,EAAE,IAAnB;AAAyBC,MAAAA,MAAM,EAAE;AAAjC,KADwB;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACGC,QAAD,IACE,KAAKC,QAAL,CAAc;AACZT,MAAAA,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC,QADT;AAEZV,MAAAA,IAAI,EAAEO,QAAQ,CAACE,MAAT,CAAgBE;AAFV,KAAd,CAFJ,EAMGC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEW,GAAG,CAACC;AAAd,KAAd,CANX;AAQD;;AACDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKhB,KAAL,CAAWG,MAAX,IAAqB,CAAC,KAAKH,KAAL,CAAWC,GAArC,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKD,KAAL,CAAWG,MAAxB,CAAP;AACF,QAAI,CAAC,KAAKH,KAAL,CAAWG,MAAZ,IAAsB,KAAKH,KAAL,CAAWC,GAArC,EACE,oBAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAoC,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEF,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDe,EAAAA,MAAM,GAAG;AACP;AAAA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,aAAL,EAAzB;AACD;;AAvB+B;;AA0BlCrB,QAAQ,CAACsB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Spiner from \"./spinner\";\r\n\r\nimport SeasonDisplay from \"./seasondisplay\";\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, long: null, errMsg: \"\" };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) =>\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          long: position.coords.longitude,\r\n        }),\r\n      (err) => this.setState({ errMsg: err.message })\r\n    );\r\n  }\r\n  renderElement() {\r\n    if (this.state.errMsg && !this.state.lat)\r\n      return <h1>Error : {this.state.errMsg}</h1>;\r\n    if (!this.state.errMsg && this.state.lat)\r\n      return <SeasonDisplay lat={this.state.lat} long={this.state.long} />;\r\n\r\n    return <Spiner />;\r\n  }\r\n  render() {\r\n    <div className=\"border\">{this.renderElement()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"]},"metadata":{},"sourceType":"module"}